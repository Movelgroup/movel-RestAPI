name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: movel-app-4scpom
  REGION: europe-west1

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'  # Required for OIDC

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          token_format: "access_token"
          workload_identity_provider: "projects/390725443005/locations/global/workloadIdentityPools/github-acitons/providers/github"
          service_account: "github-actions-deployer@movel-app-4scpom.iam.gserviceaccount.com"
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker europe-west1-docker.pkg.dev --quiet

      # Build and Push API Docker Image
      - name: Build and Push API Docker Image
        env:
          IMAGE: europe-west1-docker.pkg.dev/movel-app-4scpom/movel-repo/movel-restapi:${{ github.sha }}
        run: |
          echo "Building API Docker Image: $IMAGE"
          docker build --platform linux/amd64 -t "$IMAGE" -f Dockerfile.api .
          docker push "$IMAGE"

      # Scan API Docker Image with Trivy
      - name: Scan API Docker Image with Trivy
        env:
          IMAGE: europe-west1-docker.pkg.dev/movel-app-4scpom/movel-repo/movel-restapi:${{ github.sha }}
        uses: aquasecurity/trivy-action@v0.28.0
        with:
          image-ref: ${{ env.IMAGE }}
          format: 'table'
          # Optionally, specify severity levels to fail on (e.g., CRITICAL,HIGH)
          severity: 'CRITICAL,HIGH'
          exit-code: '1'  # This will fail the job if vulnerabilities are found

      # Deploy API to Cloud Run
      - name: Deploy API to Cloud Run
        env:
          IMAGE: europe-west1-docker.pkg.dev/movel-app-4scpom/movel-repo/movel-restapi:${{ github.sha }}
          SERVICE_NAME: movel-restapi
        run: |
          echo "Deploying API to Cloud Run with image: $IMAGE"
          gcloud run deploy "$SERVICE_NAME" \
            --image "$IMAGE" \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --timeout=600

      # Build and Push Swagger UI Docker Image
      - name: Build and Push Swagger UI Docker Image
        env:
          IMAGE_SWAGGER: europe-west1-docker.pkg.dev/movel-app-4scpom/movel-repo/swagger-ui:${{ github.sha }}
        run: |
          echo "Building Swagger UI Docker Image: $IMAGE_SWAGGER"
          docker build --platform linux/amd64 -t "$IMAGE_SWAGGER" -f swagger-ui/Dockerfile.swagger .
          docker push "$IMAGE_SWAGGER"

      # (Optional) Scan Swagger UI Docker Image with Trivy
      #- name: Scan Swagger UI Docker Image with Trivy
      #  env:
      #    IMAGE_SWAGGER: europe-west1-docker.pkg.dev/movel-app-4scpom/movel-repo/swagger-ui:${{ github.sha }}
      #  uses: aquasecurity/trivy-action@v0.6.0
      #  with:
      #    image-ref: ${{ env.IMAGE_SWAGGER }}
      #    format: 'table'
      #    severity: 'CRITICAL,HIGH'
      #    exit-code: '1'

      # Deploy Swagger UI to Cloud Run
      - name: Deploy Swagger UI to Cloud Run
        env:
          IMAGE_SWAGGER: europe-west1-docker.pkg.dev/movel-app-4scpom/movel-repo/swagger-ui:${{ github.sha }}
          SERVICE_NAME_SWAGGER: swagger-ui-service
        run: |
          echo "Deploying Swagger UI to Cloud Run with image: $IMAGE_SWAGGER"
          gcloud run deploy "$SERVICE_NAME_SWAGGER" \
            --image "$IMAGE_SWAGGER" \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --timeout=600
